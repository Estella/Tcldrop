#! /bin/sh
# \
# Edit & comment out the line below to override the auto-detect. The \ at the end HAS TO BE THERE! \
#override=$HOME/local/bin/tclsh8.5 \
# \
# Nice little hack to find latest version of tclsh in PATH \
# Parts of this detection script is written by Tothwolf \
# \
# NOTE: backslash and semicolon placements are important! \
# \
# ToDo: Get rid of 'grep -o', 'find' \
# \
# Check if override is specified: \
if [ -n "$override" ]; \
then \
  echo "Auto-detect overridden. Using tclsh in $override"; \
  exec $override "$0" ${1+"$@"}; \
fi; \
# Check for working 'grep -E' before using 'egrep' \
if echo a | (grep -E '(a|b)') >/dev/null 2>&1; \
then \
  egrep="grep -E"; \
else \
  egrep=egrep; \
fi; \
# Search for tclsh[0-9].[0-9] in each valid dir in PATH and some other common paths \
for dir in `echo $PATH:$HOME/local/bin:$HOME/bin | sed 's/:/ /g'`; \
do \
  if test -d $dir; \
  then \
    files=`find $dir 2> /dev/null | $egrep '.*/tclsh[0-9]\.[0-9]$'`; \
    if test "$files" != ""; \
    then \
      versions="${versions:+$versions }`echo $files`"; \
    fi; \
  fi; \
done; \
# Loop over each version to find the latest version of tclsh \
for fullpath in $versions; \
do \
  ver=`echo $fullpath | grep -o '[0-9]\.[0-9]$'`; \
  tmpver=`echo $ver | sed 's/\.//g'`; \
  if test "$lasttmpver" != ""; \
  then \
    if test "$tmpver" -gt "$lasttmpver"; \
    then \
      lastver=$ver; \
      lasttmpver=$tmpver; \
      lastfullpath=$fullpath; \
    fi; \
    # Prefer installs in a users home dir if we find multiple copies of tclsh with the same version \
    if test "$tmpver" = "$lasttmpver"; \
    then \
      if test "`echo $fullpath |grep -o ^$HOME`" = "$HOME"; \
      then \
        lastver=$ver; \
        lasttmpver=$tmpver; \
        lastfullpath=$fullpath; \
      fi; \
    fi; \
  else \
    lastver=$ver; \
    lasttmpver=$tmpver; \
    lastfullpath=$fullpath; \
  fi; \
done; \
# Use the latest tclsh version found, otherwise fall back to 'tclsh' \
echo "Using tclsh auto-detected in $lastfullpath"; \
exec $lastfullpath "$0" ${1+"$@"}

# Copyright (C) 2003,2004,2005,2006,2007,2008,2009 Tcldrop-Dev <Tcldrop-Dev@Tcldrop.US>
#
# $Id$
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program (see gpl.txt); if not, write to the
# Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
# Or visit http://www.GNU.Org/licenses/gpl.html
#
# The author of this project can be reached at FireEgl@Tcldrop.US
# Or can be found on IRC (EFNet or FreeNode) as FireEgl.

# This script is used to run Tcldrop in stand-alone (tclsh) mode ONLY.

# The command line options should be the same as in Eggdrop,
# except you can specify MULTIPLE configs here (separated by spaces).
# (One config for each Tcldrop you want to run)

# Command line arguments:
#  -h   help
#  -v   print version and exit
#  -n   don't go into the background
#  -c   (with -n) display channel stats every 10 seconds
#  -t   (with -n) use terminal to simulate dcc-chat
#  -m   userfile creation mode
#  optional config filename (default 'eggdrop.conf')
namespace eval ::tcldrop {
	variable tcldrop
	# On at least one FreeBSD box running tclsh8.4, argv gets reset after we source another script. So we store it here in the tcldrop array for later use:
	if {[info exists ::argv]} { set tcldrop(argv) $::argv } else { set tcldrop(argv) {} }
	if {[info exists ::argv0]} { set tcldrop(argv0) $::argv0 } else { set tcldrop(argv0) {} }
	::source [file join [file dirname [info script]] tcldrop.tcl]
}
