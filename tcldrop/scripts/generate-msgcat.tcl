#!/usr/bin/env tclsh

package require Tcl 8.5

encoding system {utf-8}

# Extracts message from a source file.
# Returns an array where the element name is the message string
# and the value is a list of line numbers where the string appears
proc GetMsgStrings {file} {
	if {![file exists $file]} {
		return -code error "No such file: $file"
	} else {
		set lineNum 0
		array set messages {}
		
		set fd [open $file r]
		# iterate through the file and grab message strings
		while {[gets $fd line] >= 0} {
			incr lineNum
			if {[set result [regexp -all -inline -- {\[mc(?:\_handle)?(?: \$\S+)? \{([^\}]+)} $line]] ne {}} {
				foreach {- MsgString} $result {
					lappend messages($MsgString) $lineNum
				}
			}
		}
		close $fd
	}
	return [array get messages]
}

# Slightly modified recursive glob proc from http://wiki.tcl.tk/1474
# FixMe: this kind of turned into a mess..
proc globRec {{includeDirs {modules lib}} {baseDir .} {filespec {*.tcl *.tm}} {types {b c f l p s}} {iteration 0}} {
	incr iteration
	foreach dir $includeDirs {
		if {[string match "./$dir*" $baseDir] || $iteration == 1} { set continue 1 }
	}
	if {![info exists continue]} { return }
	set files [glob -nocomplain -types $types -dir $baseDir -- {*}$filespec]
	foreach item [glob -nocomplain -types {d} -dir $baseDir -- *] {
		set files [concat $files [globRec $includeDirs $item $filespec $types $iteration]]
	}
	set filelist {}
	foreach x $files {
		while {[string range $x 0 1]=="./"} {
			regsub ./ $x "" x
		}
		lappend filelist "./${x}"
	}
	return $filelist
}

# FixMe: write this
# take a file a an argument
# return the name of the module that the file belongs in
# Examples:
# ./modules/tcldrop/console/dcc-1.tm == console
# ./modules/tcldrop/server-1.tm == server
# ./modules/tcldrop/core/conn-1.tm == core
proc FileToModuleName {file} {
	
}

# generate .msg files for the Tcldrop source
# FixMe: don't just generate one big file
proc GenerateMsgCatalog {} {
	set pwd [pwd]
	cd ..
	set fd [open "./language/test.msg" w]
	fconfigure $fd -translation lf -encoding {utf-8}
	puts $fd "# test.msg - automatically generated by generate-msgcat.tcl on [clock format [clock seconds] -timezone UTC]\n"
	foreach file [globRec] {
		array set messages [GetMsgStrings $file]
		foreach msg [array names messages] {
			foreach lineNum $messages($msg) {
				puts $fd "#: $file:$lineNum"
			}
			puts $fd "msgid \{${msg}\}"
			puts $fd "msgstr \{${msg}\}\n"
			
		}
	}
	close $fd
	cd $pwd
}


proc chef {args} {
	set subs [list {a([nu])} {u\1}\
	{A([nu])} {U\1}\
	{a\Y} e\
	{A\Y} E\
	{en\y} ee\
	{\Yew} oo\
	{\Ye\y} e-a\
	{\ye} i\
	{\yE} I\
	{\Yf} ff\
	{\Yir} ur\
	{(\w+?)i(\w+?)$} {\1ee\2}\
	{\Yow} oo\
	{\yo} oo\
	{\yO} Oo\
	{^the$} zee\
	{^The$} Zee\
	{th\y} t\
	{\Ytion} shun\
	{\Yu} {oo}\
	{\YU} {Oo}\
	v f\
	V F\
	w w\
	W W\
	{([a-z])[.]} {\1. Bork Bork Bork!}]
	foreach word $args {
		foreach {exp subSpec} $subs {
			set word [regsub -all -- $exp $word $subSpec]
#			puts "$exp || $subSpec -> $word"
		}
		lappend retval $word
	}
	return [join $retval]
}
